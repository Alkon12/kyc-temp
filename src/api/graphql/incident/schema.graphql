type Query {
    getIncidentsByContract(contractId: Int!): [IncidentEntity]
}

type Mutation {
    createIncident(idsmartIt: String!, contractId: Int!, incident: IncidentInput!): IncidentEntity
}

input IncidentFilesInput {
    filename: String!
    content: String!
}

input IncidentInput {
    uberItemId: Int!
    amount: Float!
    date: String
    comments: String
    files: [IncidentFilesInput!]
}

type IncidentEntity {
    registeredAt: String
    id: Int
    companyId: Int
    contractId: Int
    date: String
    uberItemId: Int
    amount: Float

    uberItem: UberItemEntity
}

#TODO: CREATE SEPARATE FILES FOR UBERITEM
type UberItemCategory {
    id: Int!
    category: String!
    categoryId: Int

    parentCategory: UberItemCategory
}

type UberItemEntity {
    id: Int!
    uberItem: String!
    uberItemCategoryId: Int!
    paymentItemId: Int
    contentCategoryId: Int
    billItemId: Int

    uberItemCategory: UberItemCategory
}