extend type Query {
  quoteById(quoteId: ID!): Quote
  activeQuotes: [Quote]
  quotesByUser(userId: ID!): [Quote]
}

extend type Mutation {
  createQuote(userId: ID!): Quote!
  getOrCreateQuote(userId: ID!): Quote!
}

type Quote {
  id: ID!
  scoringComplete: Boolean!
  scoringError: Boolean!
  scoringErrorMessage: String
  scoringEngine: String
  expiresAt: DateTime
  createdAt: DateTime
  user: User
  offers: [Offer]
  isRecent: Boolean
  isActive: Boolean
  isExpired: Boolean
  scoreMark: String # Not usable, kept for backward compatibility
  scoreResolution: String # Not usable, kept for backward compatibility
}
