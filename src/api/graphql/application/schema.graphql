extend type Query {
  applications: [Application]
  applicationById(applicationId: ID!): Application!
  activeApplications: [Application]
}

extend type Mutation {
  createApplication(offerId: ID!): CreateApplicationResponse!
  revokeApplication(applicationId: ID!): Boolean
}


type Application {
  id: ID!
  title: String
  friendlyId: String
  uberProfileImageSrc: String
  currentStep: Int
  checklist: [ApplicationChecklist]
  quote: Quote
  offer: Offer
  offerId: ID
  product: Product
  user: User
  vehicle: Vehicle
  tasks: [Task]
  address: Address
  inactivityStatementReason: String
  hasDriverEngaged: Boolean
  hasKycFinished: Boolean
  identificationCard: Content
  identificationCardReverse: Content
  selfiePicture: Content
  driversLicense: Content
  driversLicenseReverse: Content
  incomeStatement: Content
  inactivityStatement: Content
  taxIdentification: Content
  addressProof: Content
  finishedAt: DateTime
  expiredAt: DateTime
  createdAt: DateTime
  updatedAt: DateTime
  idpersona: String
  quoteSmartItId: String
  contractId: String
  contractDate: DateTime
  status: String

  contract: ContractEntity

}

type CreateApplicationResponse {
  application: Application
  flowStatus: ApplicationFlowStatus
}

enum ApplicationFlowStatus {
  APPROVE
  REJECT
  BACKOFFICE_REVIEW
  MANAGER_REVIEW
}

type Address {
  id: ID!
  street: String!
  extNumber: String!
  intNumber: String!
  zipCode: String!
  district: String!
  city: String!
  state: String!
  country: String!
  latitude: String!
  longitude: String!
  real_time_latitude: String!
  real_time_longitude: String!
}
