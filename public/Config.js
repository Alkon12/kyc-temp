export var Config = (function () {
    // -------------------------------------
    // REQUIRED
    // Available at https://dev.facetec.com/account
    var DeviceKeyIdentifier = "dntU3vB2be0opvaBDkcoQEG8CFYSSYCf";

    // -------------------------------------
    // REQUIRED
    var BaseURL = "https://api.facetec.com/api/v3.1/biometrics";

    // -------------------------------------
    // REQUIRED
    var PublicFaceScanEncryptionKey =
        "-----BEGIN PUBLIC KEY-----\n" +
        "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA5PxZ3DLj+zP6T6HFgzzk\n" +
        "M77LdzP3fojBoLasw7EfzvLMnJNUlyRb5m8e5QyyJxI+wRjsALHvFgLzGwxM8ehz\n" +
        "DqqBZed+f4w33GgQXFZOS4AOvyPbALgCYoLehigLAbbCNTkeY5RDcmmSI/sbp+s6\n" +
        "mAiAKKvCdIqe17bltZ/rfEoL3gPKEfLXeN549LTj3XBp0hvG4loQ6eC1E1tRzSkf\n" +
        "GJD4GIVvR+j12gXAaftj3ahfYxioBH7F7HQxzmWkwDyn3bqU54eaiB7f0ftsPpWM\n" +
        "ceUaqkL2DZUvgN0efEJjnWy5y1/Gkq5GGWCROI9XG/SwXJ30BbVUehTbVcD70+ZF\n" +
        "8QIDAQAB\n" +
        "-----END PUBLIC KEY-----";

    // Importar las strings de localización en español
    var localizedStrings = require("./core-sdk-optional/FaceTecStrings.es.js");

    function initializeFromAutogeneratedConfig(FaceTecSDK, callback) {
        // Set paths before initialization
        FaceTecSDK.setImagesDirectory("/core-sdk/FaceTec_images");
        FaceTecSDK.setResourceDirectory("/core-sdk/FaceTecSDK.js/resources");
        
        // Initialize SDK
        FaceTecSDK.initializeInDevelopmentMode(DeviceKeyIdentifier, PublicFaceScanEncryptionKey,
            function (initializedSuccessfully) {
                if (initializedSuccessfully) {
                    // Configurar localización con el objeto de strings directamente
                    FaceTecSDK.configureLocalization(localizedStrings);
                    console.log("SDK initialized successfully with Spanish localization");
                    // Apply customization after successful initialization
                    var customization = retrieveConfigurationWizardCustomization(FaceTecSDK);
                    FaceTecSDK.setCustomization(customization);
                    
                }
                callback(initializedSuccessfully);
            });
    }

    function retrieveConfigurationWizardCustomization(FaceTecSDK) {
        var sdkImageDirectory = "/core-sdk/FaceTec_images/";
        
        // For Color Customization
        var outerBackgroundColor = "#ffffff";
        var frameColor = "#ffffff";
        var borderColor = "#417FB2";
        var ovalColor = "#417FB2";
        var dualSpinnerColor = "#417FB2";
        var textColor = "#417FB2";
        var buttonAndFeedbackBarColor = "#417FB2";
        var buttonAndFeedbackBarTextColor = "#ffffff";
        var buttonColorHighlight = "#396E99";
        var buttonColorDisabled = "#B9CCDE";

        var defaultCustomization = new FaceTecSDK.FaceTecCustomization();

        // Set Frame Customization
        defaultCustomization.frameCustomization.borderCornerRadius = "20px";
        defaultCustomization.frameCustomization.backgroundColor = frameColor;
        defaultCustomization.frameCustomization.borderColor = borderColor;

        // Set Overlay Customization
        defaultCustomization.overlayCustomization.brandingImage = sdkImageDirectory + "FaceTec_your_app_logo.png";
        defaultCustomization.overlayCustomization.backgroundColor = outerBackgroundColor;

        // Set Guidance Customization
        defaultCustomization.guidanceCustomization.backgroundColors = frameColor;
        defaultCustomization.guidanceCustomization.foregroundColor = textColor;
        defaultCustomization.guidanceCustomization.buttonBackgroundNormalColor = buttonAndFeedbackBarColor;
        defaultCustomization.guidanceCustomization.buttonBackgroundDisabledColor = buttonColorDisabled;
        defaultCustomization.guidanceCustomization.buttonBackgroundHighlightColor = buttonColorHighlight;
        defaultCustomization.guidanceCustomization.buttonTextNormalColor = buttonAndFeedbackBarTextColor;
        defaultCustomization.guidanceCustomization.buttonTextDisabledColor = buttonAndFeedbackBarTextColor;
        defaultCustomization.guidanceCustomization.buttonTextHighlightColor = buttonAndFeedbackBarTextColor;
        defaultCustomization.guidanceCustomization.retryScreenImageBorderColor = borderColor;
        defaultCustomization.guidanceCustomization.retryScreenOvalStrokeColor = borderColor;

        // Set Cancel Button Customization
        defaultCustomization.cancelButtonCustomization.customImage = sdkImageDirectory + "FaceTec_cancel.png";
        defaultCustomization.cancelButtonCustomization.location = FaceTecSDK.FaceTecCancelButtonLocation.TopLeft;

        return defaultCustomization;
    }

    return {
        DeviceKeyIdentifier: DeviceKeyIdentifier,
        BaseURL: BaseURL,
        PublicFaceScanEncryptionKey: PublicFaceScanEncryptionKey,
        initializeFromAutogeneratedConfig: initializeFromAutogeneratedConfig,
        retrieveConfigurationWizardCustomization: retrieveConfigurationWizardCustomization
    };
})();
