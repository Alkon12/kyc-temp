meta {
  name: Get Prospect By User
  type: graphql
  seq: 1
}

post {
  url: {{graphqlEndpoint}}
  body: graphql
  auth: bearer
}

auth:bearer {
  token: {{accessToken}}
}

body:graphql {
  query prospectByUserId($userId: ID!) {
    prospectByUserId(userId: $userId) {
      id
      friendlyId
      quoteCount
      prospectStatus {
        id
        name
      }
      lastQuote {
        id
        scoringComplete
        scoreResolution
        scoreMark
        createdAt
        isRecent
        isActive
        isExpired
        expiresAt
        scoringEngine
        scoreDetails {
            segmentId
            segmentResult
            segmentName
            segmentValue
        }
        user {
            id
            email
            fullName
            phoneNumber
            picture
            uberRating
            uberDriverId
            uberPartnerRole
            uberActivationStatus
            uberCityName
            uberCityCode
            dob
        }
        offers {
            id
            weeklyPrice
            leasingPeriod
            product {
                brand
                model
                picture
            }
        }
      }
      
    }
  }
}

body:graphql:vars {
  {
      "userId": "b7b8bb0d-dc3e-412c-a4e3-7d9e0fa2f79b"
  }
}
